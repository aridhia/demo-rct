\documentclass{article}
\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
muffleError <- function(x,options) {}
knit_hooks$set(error=muffleError)
@

\title{Statistical Analysis Report}

\section*{Keplan-Meier Graph}

<<message=FALSE, echo=FALSE, warning=FALSE, fig.align = 'center'>>=

library(survival)
library(survminer)
library(readr)

outcomes <- read_csv("./demo_rct/results/outcomes.csv")

surv_object <- Surv(outcomes$time, outcomes$primary.endpoint)

fit <- survfit(surv_object ~ treatmentno, data = outcomes)


ggsurvplot(fit, data=outcomes, pval = TRUE,
    risk.table = TRUE,
    xscale = "d_y",
    break.time.by = 365.25,
    xlab = "Time since randomisation (years)",
    ylab = "Without clinical recurrence(%)",
    legend = "bottom",
    legend.labs = c("Mercaptopurine", "Placebo"),
    censor = FALSE,
    tables.y.text = FALSE)
@

%\includegraphics{plot_1.PNG}


\section{Log-Rank Test}

<<message=FALSE, echo=FALSE, warning=FALSE>>=

#survdiff() can be used to compute the log-rank test comparing two survival curves

log_rank <- survdiff(surv_object ~ treatmentno, data = outcomes)
print(log_rank)
@
%\includegraphics{table1.PNG}

\section*{Cox Proportional Hazards Regression}

\subsection*{Adjusted analysis}

<<message=FALSE, echo=FALSE, warning=FALSE>>=
outcomes$treatmentno <- outcomes$treatmentno %>% 
    #Treatmentno has to be converted into a factor variable
    as.factor() %>% 
    #By default the reference vale of treatmentno is Active 
       #(alphabetically determined). This has to be reversed
    forcats::fct_rev()


#First, create a survival object that consist of the time and whether the endpoint was reached
surv_object <- Surv(outcomes$time, outcomes$primary.endpoint)

#Adjusted Cox Regression Model
cox_results_adjusted <- coxph(surv_object ~ treatmentno + strata(factor(smoker)) + strata(a_centreno) + factor(sixmp) + factor(azathioprine), data = outcomes)


#Extract the "important" information: HR, CI and p values
HR_adjusted <- round(exp(coef(cox_results_adjusted)), 2)
CI_adjusted <- round(exp(confint(cox_results_adjusted)), 2)
p_adjusted <- round(coef(summary(cox_results_adjusted))[,5], 3)

#Name the columns of CI
colnames(CI_adjusted) <- c("Lower_Adjusted_CI", "Higher_Adjusted_CI")

#Bind columns together as a dataset
cox_adjusted <- as.data.frame(cbind(HR_adjusted, CI_adjusted, p_adjusted))

cox_adjusted$a <- "("; cox_adjusted$b <- "-"; cox_adjusted$c <- ")"
cox_adjusted <- cox_adjusted[,c("HR_adjusted", "a", "Lower_Adjusted_CI", "b", 
    "Higher_Adjusted_CI", "c", "p_adjusted")]
cox_adjusted = unite(cox_adjusted, "Adjusted_95%_CI", "a":"c", sep = "")
row.names(cox_adjusted) <- c("Mercaptopurine", "Previous treatments with Mercaptopurine", "Pervious treatments with Azathioprine")

kable(cox_adjusted, col.names = c("Adjusted HR", "95% CI", "p value"))
@
%\includegraphics{table2.PNG}

\subsection*{Unadjusted analysis}

<<message=FALSE, echo=FALSE, warning=FALSE>>=
#Unadjusted Cox Regression Model - Analysis without the adjustment of previous treatments with Thiopurines, but still stratified for randomisation strata
cox_results_unadjusted <- coxph(surv_object ~ treatmentno + strata(factor(smoker)) + strata(a_centreno), data = outcomes)

HR_unadjusted <- round(exp(coef(cox_results_unadjusted)), 2)
CI_unadjusted <- round(exp(confint(cox_results_unadjusted)), 2)
p_unadjusted <- round(coef(summary(cox_results_unadjusted))[,5], 3)
colnames(CI_unadjusted) <- c("Lower_Unadjusted_CI", "Higher_Unadjusted_CI")

cox_unadjusted <- as.data.frame(cbind(HR_unadjusted, CI_unadjusted, p_unadjusted))


cox_unadjusted$a <- "("; cox_unadjusted$b <- "-"; cox_unadjusted$c <- ")"

cox_unadjusted <- cox_unadjusted[,c("HR_unadjusted", "a", "Lower_Unadjusted_CI", "b", "Higher_Unadjusted_CI", "c", "p_unadjusted")]
cox_unadjusted = unite(cox_unadjusted, "Unadjusted_95%_CI", "a":"c", sep = "")
row.names(cox_unadjusted) <- c("Mercaptopurine")

kable(cox_unadjusted, col.names = c("Unadjusted HR", "95% CI", "p value")) 
@
%\includegraphics{table3.PNG}

\end{document}
